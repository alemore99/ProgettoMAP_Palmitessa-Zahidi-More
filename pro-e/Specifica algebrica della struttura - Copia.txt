Specifica algebrica della struttura dati Set

Specifica Algebrica per Set[T] dove con T si intendono il tipo degli elementi presenti all'interno del Set ed il set assume lo stesso valore che ha T; ad esempio se T è stringa allora Set[T] sara un set di stringhe. Riassumendo i tipi usati all'interno del Set sono:

  - Set<T> -> tipo del set.
  - T -> tipo degli elementi.
  - boolean -> tipo booleano per operazioni di verifica.

Specifica sintattica:

	sorts: insieme, item, boolean 

	operazioni ammesse
		Costruttore ed creazione del Set -> empty(): Set<T> 
     
  		Inserimento di un elemento all'interno -> insert(Set<T>, T): Set<T>   

		Verifica di un elemento al suo interno -> contains(Set<T>, T): boolean
			Rida un booleano con True se presente o false se non lo è
  
		Rimuove un elemento al suo interno -> remove(Set<T>, T): Set<T> 
			Rida il set senza quell'elemento al suo interno

		Verifica se il set è  vuoto -> isEmpty(Set<T>): boolean      
			Rida un booleano con True se vuoto o false se non lo è 

		Rida la dimensione del set -> size(Set<T>): int            

  		Unisce due set -> union(Set<T>, Set<T>): Set<T> 

  		Intersezione di due o più set -> intersection(...): Set<T>    

		Differenza di due o più set -> difference(...): Set<T> 

Specifica semantica:

		Creazione del set -> contains(empty(), x) = false

		Inserimento nel set -> contains(insert(s, x), x) = true

		Inserisce un elemento (senza duplicati) -> insert(insert(s, x), x) = insert(s, x)     
  
		Contiene un elemento -> contains(insert(s, x), y) = contains(s, y) se x ≠ y

		Rimuove un elemento dal set -> remove(empty(), x) = empty()
				remove(insert(s, x), x) = remove(s, x)

		Unione di due set -> union(s1, s2) = { x | x ∈ s1 ∨ x ∈ s2 }

		Intersezione di due set -> intersection(s1, s2) = { x | x ∈ s1 ∧ x ∈ s2 }

		Differenza di set -> difference(s1, s2) = { x | x ∈ s1 ∧ x ∉ s2 }

Specifica di restrizione

restrictions
	remove(empty(), x) = error
	contains(insert(s, x), y) = contains(s, y) se x ≠ y = error

dove error è un errore non specificato




